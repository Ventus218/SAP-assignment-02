@startuml rides-components

title "Rides microservice"

left to right direction

component "DB"
interface "Rides API" as RidesAPI
interface "EBikes API" as EBikesAPI
interface "Users API" as UsersAPI
interface "Collect Metrics API" as CollectMetricsAPI

hexagon Adapters {
    hexagon Domain as DomainHex {
        component Domain {
            'ports in or out are just used for layout purposes and do not have any semantic'
            portout "RidesRepository" as Repo
            portin RidesService
            portin UsersService
            portout MetricsService
            portout EBikesService
        }
    }

    component "RepositoryAdapter" as RepoAdapter
    RepoAdapter -l-> DB
    RepoAdapter -u-|> Repo

    component "Metrics Service Adapter" as MetricsAdapter
    MetricsAdapter -u-|> MetricsService
    MetricsAdapter --( CollectMetricsAPI

    component EBikesAdapter
    EBikesAdapter -r-( EBikesAPI
    EBikesAdapter -u-|> EBikesService

    component UsersAdapter
    UsersAdapter -r-( UsersAPI
    UsersAdapter -d-|> UsersService

    component "HTTPPresentationAdapter" as HTTPAdapter
    HTTPAdapter -l-() RidesAPI
    HTTPAdapter -d-> RidesService
}

component "EBikes" as EBikes <<Microservice>>
EBikes -r-() EBikesAPI

component "Users" as Users <<Microservice>>
Users -r-() UsersAPI

component "Metrics Server" as MetricsServer <<Microservice>>
MetricsServer -r-() CollectMetricsAPI

@enduml
