@startuml rides-microservice-domain-model

title Rides microservice domain model

class Ride {
    eBikeId: EBikeId
    username: Username
    start: DateTime
    end: DateTime?
}
struct RideId {
    value: String
}
Ride "1" -u-> "id 1" RideId

class RidesRepository <<Repository>>
RidesRepository o-l- Ride

class RidesService <<Service>> {
    findRide(rideId: RideId): Ride?
    activeRides(): Iterable<Ride>
    startRide(eBikeId: EBikeId, username: Username): Ride
    endRide(id: RideId)
    availableEBikes(): Iterable<EBikeId>
    ..
    healthCheck(): Void
}

RidesService --> RidesRepository : "uses"

class EBikesService <<Service>>
RidesService --> EBikesService : "uses"

class UsersService <<Service>>
RidesService --> UsersService : "uses"

class MetricsService <<Service>>
RidesService --> MetricsService : "uses"

hide empty members

@enduml
